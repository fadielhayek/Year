public class Year {
	
	public static final int CALDATE = 1582;
	
	public Year(){
		
	}
	
	public static boolean leapYear(int year){
		if(year%100 == 0){
			if(year%400 == 0){
				return true;
			}
		else return false;
		}
		
		if(year % 4 == 0)
			return true;
		return false;
	}
	
	
	public static int daysPerMonth(int year, int mon){
		switch(mon){
		case 1: System.out.println("There are 31 days in January");
				break;
		case 2: 
			if(leapYear(year)){
				System.out.println("There are 29 days in February");
			}
			else{
				System.out.println("There are 28 days in February");
			}
			break;
		case 3: System.out.println("There are 31 days in March");
		break;
		case 4: System.out.println("There are 30 days in April");
		break;
		case 5: System.out.println("There are 31 days in May");
		break;
		case 6: System.out.println("There are 30 days in June");
		break;
		case 7: System.out.println("There are 31 days in July");
		break;
		case 8: System.out.println("There are 31 days in August");
		break;
		case 9: System.out.println("There are 30 days in September");
		break;
		case 10: System.out.println("There are 31 days in October");
		break;
		case 11: System.out.println("There are 30 days in November");
		break;
		case 12: System.out.println("There are 31 days in December");
		break;
		}
		return mon;
	}
	
	public static int easterMon(int year){
		// Divide y by 19 and call the remainder a. Ignore the quotient.
	    int a = year % 19;

	    // Divide y by 100 to get a quotient b and a remainder c.
	    int b = year / 100;
	    int c = year % 100;

	    // Divide b by 4 to get a quotient d and a remainder e.
	    int d = b / 4;
	    int e = b % 4;

	    // Divide 8 * b + 13 by 25 to get a quotient g. Ignore the remainder.
	    int g = (8 * b + 13) / 25;

	    // Divide 19 * a + b - d - g + 15 by 30 to get a remainder h. Ignore the quotient.
	    int h = (19 * a + b - d - g + 15) % 30;

	    // Divide c by 4 to get a quotient j and a remainder k.
	    int j = c / 4;
	    int k = c % 4;

	    // Divide a + 11 * h by 319 to get a quotient m. Ignore the remainder.
	    int m = (a + 11 * h) / 319;

	    // Divide 2 * e + 2 * j - k - h + m + 32 by 7 to get a remainder r. Ignore the quotient.
	    int r = (2 * e + 2 * j - k - h + m + 32) % 7;
	    
	    // Divide h - m + r + 90 by 25 to get a quotient n. Ignore the remainder.
	    int n = (h - m + r + 90) / 25;
		return n;
	}
	
	public static int easterDay(int year){//calculates easter day
		// Divide y by 19 and call the remainder a. Ignore the quotient.
	    int a = year % 19;

	    // Divide y by 100 to get a quotient b and a remainder c.
	    int b = year / 100;
	    int c = year % 100;

	    // Divide b by 4 to get a quotient d and a remainder e.
	    int d = b / 4;
	    int e = b % 4;

	    // Divide 8 * b + 13 by 25 to get a quotient g. Ignore the remainder.
	    int g = (8 * b + 13) / 25;

	    // Divide 19 * a + b - d - g + 15 by 30 to get a remainder h. Ignore the quotient.
	    int h = (19 * a + b - d - g + 15) % 30;

	    // Divide c by 4 to get a quotient j and a remainder k.
	    int j = c / 4;
	    int k = c % 4;

	    // Divide a + 11 * h by 319 to get a quotient m. Ignore the remainder.
	    int m = (a + 11 * h) / 319;

	    // Divide 2 * e + 2 * j - k - h + m + 32 by 7 to get a remainder r. Ignore the quotient.
	    int r = (2 * e + 2 * j - k - h + m + 32) % 7;
	   
	    // Divide h - m + r + 90 by 25 to get a quotient n. Ignore the remainder.
	    int n = (h - m + r + 90) / 25;
	    
	    // Divide h - m + r + n + 19 by 32 to get a remainder p.
	    int p = (h - m + r + n + 19) % 32;
		return p;
	}
	

}
